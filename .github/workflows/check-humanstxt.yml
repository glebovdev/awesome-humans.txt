name: Check humans.txt Links

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check humans.txt URLs
        id: check
        run: |
          echo "Extracting URLs from README.md..."
          # First collect all URLs in an array
          mapfile -t URLS < <(bash ./scripts/extract-urls.sh)
          
          FAILED_URLS=()
          TOTAL=${#URLS[@]}
          
          for url in "${URLS[@]}"; do
            echo "Checking: $url"
            if ! curl --max-time 10 --output /dev/null --silent --head --fail "$url"; then
              FAILED_URLS+=("$url")
              echo "::warning::Failed to access $url"
            fi
          done
          
          echo "Checked $TOTAL URLs, found ${#FAILED_URLS[@]} broken links"
          
          if [ ${#FAILED_URLS[@]} -gt 0 ]; then
            echo "urls=${FAILED_URLS[*]}" >> $GITHUB_OUTPUT
          fi

      - name: Create issues for broken links
        if: steps.check.outputs.urls
        uses: actions/github-script@v7
        with:
          script: |
            const urls = '${{ steps.check.outputs.urls }}'.trim().split(' ').filter(Boolean);
            for (const url of urls) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.name,
                title: `Broken humans.txt link: ${url}`,
                body: `The humans.txt link ${url} is not accessible.\nPlease verify the link and update or remove it from the README.md file.`,
                labels: ['broken-link']
              });
            }